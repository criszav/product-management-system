spring.application.name=product-management-system
#debug=true

server.servlet.context-path=/api/v1

# DB config
spring.datasource.url=jdbc:mysql://localhost:3306/ecommerce-db
spring.datasource.username=
spring.datasource.password=
spring.datasource.drive-class-name=com.mysql.cj.jdbc.Driver

# Jpa config
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.format_sql=true
# Permite insertar (opción 'always') datos de archivos db/.sql (las tablas ya deben existir previamente)
#spring.sql.init.mode=always
spring.sql.init.mode=never
# Divide los sql en diferentes archivos e indica que dichos archivos estan en la ruta db/nombre-archivo
spring.sql.init.data-locations=classpath:db/categories.sql, classpath:db/products.sql, classpath:db/users.sql
# Retrasa la ejecución de la db (data.sql) hasta que se hayan creado primero las tablas (Entity)
spring.jpa.defer-datasource-initialization=true

# Pagination config
spring.data.web.pageable.default-page-size=5
spring.data.web.pageable.max-page-size=100
# numeracion de las paginas comienza en 1
spring.data.web.pageable.one-indexed-parameters=true
spring.data.web.sort.sort-parameter=order

# Spring security config
security.jwt.expiration_in_minutes=90
#security.jwt.secret_key=
security.jwt.secret_key=

# Cloudinary config
cloudinary.cloud-name=
cloudinary.api-key=
cloudinary.api-secret=
cloudinary.cloudinary-url=

# MultiPart files config
spring.servlet.multipart.max-file-size=5MB
spring.servlet.multipart.max-request-size=5MB

# Email config
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=
spring.mail.password=
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true